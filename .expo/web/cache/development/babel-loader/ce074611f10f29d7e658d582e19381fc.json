{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bmaz_/dev/LeranWithMe/src/components/numbersPage.js\";\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport EvilIcons from \"@expo/vector-icons/EvilIcons\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport styles from \"../styles/numbersStyles\";\nimport Emoji from 'react-native-emoji';\nvar disableYellowBox = true;\n\nvar Number = function Number(props) {\n  var _useState = useState(props.number),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var numberArray = number.number;\n  console.log(numberArray);\n  var numbers = numberArray;\n  return React.createElement(View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.numbersContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(AntDesign, {\n    name: 'caretright',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    title: \"upperCase\",\n    style: [styles.button1],\n    onPress: function onPress() {\n      numbers[0] <= 100 ? alert(\"Number... \" + numbers[0]) : alert(\"Good Job\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.numberBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, numbers[0] == 101 ? React.createElement(Emoji, {\n    name: \"smiley\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 63\n    }\n  }, \"Next\") : numbers[0])), React.createElement(TouchableOpacity, {\n    title: \"upperCase\",\n    style: [styles.button1],\n    onPress: function onPress() {\n      numbers[1] <= 100 ? alert(\"Number... \" + numbers[1]) : alert(\"Good Job\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.numberBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, numbers[1] == 101 ? React.createElement(Emoji, {\n    name: \"smiley\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 63\n    }\n  }, \"Next\") : numbers[1])), React.createElement(TouchableOpacity, {\n    title: \"upperCase\",\n    style: [styles.button1],\n    onPress: function onPress() {\n      numbers[2] <= 100 ? alert(\"Number... \" + numbers[2]) : alert(\"Good Job\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.numberBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, numbers[2] == 101 ? React.createElement(Emoji, {\n    name: \"smiley\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 63\n    }\n  }, \"Next\") : numbers[2])), React.createElement(Text, {\n    style: styles.arrowContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"R\")));\n};\n\nexport default Number;","map":{"version":3,"sources":["/Users/bmaz_/dev/LeranWithMe/src/components/numbersPage.js"],"names":["React","useState","EvilIcons","AntDesign","styles","Emoji","disableYellowBox","Number","props","number","setNumber","numberArray","console","log","numbers","mainContainer","numbersContainer","button1","alert","numberBox","arrowContainer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  Dimensions\n} from \"react-native\";\nimport EvilIcons from 'react-native-vector-icons/EvilIcons'\nimport AntDesign from 'react-native-vector-icons/AntDesign'\nimport styles from \"../styles/numbersStyles\";\nimport Emoji from 'react-native-emoji';\n\nconst disableYellowBox = true;\n\n\n\nconst Number = (props) => {\n  const [number, setNumber] = useState(props.number)\n  let numberArray = number.number;\n  console.log(numberArray)\n//   const newNumber = []\n//   for(let i = 0; i < 3; i++) {\n//       newNumber.push(numberArray[i].number)\n//   }\n//   console.log(newNumber)\n\n// const numbers = newNumber\nconst numbers = numberArray\n\n  return (\n    <View style={styles.mainContainer}>\n      <View style={styles.numbersContainer}>\n        <AntDesign  name={'caretright'}/>\n      <TouchableOpacity\n      title='upperCase' \n      style={[\n          styles.button1\n          ]} \n          onPress={() => {numbers[0] <= 100 ? alert(`Number... ${numbers[0]}`) : alert(`Good Job`)}}>\n          <Text style={styles.numberBox}>{numbers[0] == 101 ? <Emoji name=\"smiley\">Next</Emoji> : numbers[0]}</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n      title='upperCase' \n      style={[\n          styles.button1\n          ]} \n          onPress={() => {numbers[1] <= 100 ? alert(`Number... ${numbers[1]}`) : alert(`Good Job`)}}>\n          <Text style={styles.numberBox}>{numbers[1] == 101 ? <Emoji name=\"smiley\">Next</Emoji> : numbers[1]}</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n      title='upperCase' \n      style={[\n          styles.button1\n          ]} \n          onPress={() => {numbers[2] <= 100 ? alert(`Number... ${numbers[2]}`) : alert(`Good Job`)}}>\n          <Text style={styles.numberBox}>{numbers[2] == 101 ? <Emoji name=\"smiley\">Next</Emoji> : numbers[2]}</Text>\n      </TouchableOpacity>\n      <Text style={styles.arrowContainer}>R</Text>\n      </View>\n    </View>\n    )\n}\nexport default Number"]},"metadata":{},"sourceType":"module"}