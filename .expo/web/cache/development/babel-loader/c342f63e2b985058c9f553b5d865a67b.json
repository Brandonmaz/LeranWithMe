{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bmaz_/dev/LeranWithMe/src/components/colorsPage.js\";\n\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport styles from \"../styles/colorStyles\";\n\nvar backArrow = require(\"../images/backArrow.png\");\n\nvar forwardArrow = require(\"../images/forwardArrow.png\");\n\nvar homeButton = require(\"../images/homeButton.png\");\n\nvar Color = function Color(props) {\n  var _useState = useState(props.color),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var oldArray = color;\n  var randomArr = color[0].arr;\n  console.log(oldArray);\n  var array = [];\n  var array2 = [];\n\n  for (var i = 0; i < oldArray.length; i++) {\n    array.push(oldArray[i].code);\n\n    for (var j = 0; j < randomArr.length; j++) {\n      array2.push(randomArr[j].code);\n    }\n  }\n\n  var random = array2.sort(function () {\n    return 0.5 - Math.random();\n  }).slice(0, 14);\n  var randomArray = [];\n  var mainColor = array[0];\n  randomArray.push(random, mainColor);\n  return React.createElement(View, {\n    style: styles.colorsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.colorNameBox],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.textBox, {\n      color: mainColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, mainColor)), React.createElement(View, {\n    style: styles.mainColorsBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.colorContainer1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    title: \"random1\",\n    style: [styles.colorButton, {\n      backgroundColor: random[0]\n    }],\n    onPress: function onPress() {\n      return alert(random[0] == mainColor ? \"Correct! Lets spell it together... \" + mainColor : 'try another color');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    title: \"random2\",\n    style: [styles.colorButton, {\n      backgroundColor: random[1]\n    }],\n    onPress: function onPress() {\n      return alert(random[1] == mainColor ? \"Correct! Lets spell it together... \" + mainColor : 'try another color');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    title: \"random3\",\n    style: [styles.colorButton, {\n      backgroundColor: random[2]\n    }],\n    onPress: function onPress() {\n      return alert(random[2] == mainColor ? \"Correct! Lets spell it together... \" + mainColor : 'try another color');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.colorContainer2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    title: \"random4\",\n    style: [styles.colorButton, {\n      backgroundColor: random[3]\n    }],\n    onPress: function onPress() {\n      return alert(random[3] == mainColor ? \"Correct! Lets spell it together... \" + mainColor : 'try another color');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    title: \"random5\",\n    style: [styles.colorButton, {\n      backgroundColor: random[4]\n    }],\n    onPress: function onPress() {\n      return alert(random[4] == mainColor ? \"Correct! Lets spell it together... \" + mainColor : 'try another color');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    title: \"random6\",\n    style: [styles.colorButton, {\n      backgroundColor: random[0] == mainColor ? random[5] : random[1] == mainColor ? random[5] : random[2] == mainColor ? random[5] : random[3] == mainColor ? random[5] : random[4] == mainColor ? random[5] : mainColor\n    }],\n    onPress: function onPress() {\n      return alert(random[0] == mainColor || random[1] == mainColor || random[2] == mainColor || random[3] == mainColor || random[4] == mainColor ? 'try another color' : random[6] || random[7] || random[8] || random[9] || random[10] || random[11] || random[12] || random[13] == mainColor ? \"Correct! Lets spell it together... \" + mainColor : 'Not me');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.navBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    title: \"backward\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: backArrow,\n    style: {\n      width: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Home\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Forward\")));\n};\n\nexport default Color;","map":{"version":3,"sources":["/Users/bmaz_/dev/LeranWithMe/src/components/colorsPage.js"],"names":["React","useState","FontAwesome","styles","backArrow","require","forwardArrow","homeButton","Color","props","color","setColor","oldArray","randomArr","arr","console","log","array","array2","i","length","push","code","j","random","sort","Math","slice","randomArray","mainColor","colorsContainer","colorNameBox","textBox","mainColorsBox","colorContainer1","colorButton","backgroundColor","alert","colorContainer2","navBar","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  Button,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport FontAwesome from 'react-native-vector-icons/FontAwesome'\nimport styles from \"../styles/colorStyles\";\n\n\nconst backArrow = require(\"../images/backArrow.png\")\nconst forwardArrow = require('../images/forwardArrow.png')\nconst homeButton = require(\"../images/homeButton.png\")\n\nconst Color = (props) => {\n  const [color, setColor] = useState(props.color)\n  let oldArray = color;\n  let randomArr = color[0].arr\n  console.log(oldArray)\n  // console.log(randomArr)\n  let array = [];\n  let array2 = []\n// for loop takes old array and pushes colors into array \n  for (let i = 0; i < oldArray.length; i++) {\n    array.push(oldArray[i].code);\n   for (let j = 0; j < randomArr.length; j++){\n    array2.push(randomArr[j].code)\n  }\n}\n// 0.5 will randomize the colors with Math.random // slice takes 6 random items out of the array \n  const random = array2.sort(() => 0.5 - Math.random()).slice(0, 14);\n\n  const randomArray = []\n  const mainColor = array[0]\n  // console.log(random)\n  randomArray.push(random , mainColor)\n\n  return (\n    <View style={styles.colorsContainer}>\n        <View\n          style={[\n            styles.colorNameBox,\n          ]}\n        >\n          <Text style={[styles.textBox, {color: mainColor}]}>{mainColor}</Text>\n      </View>\n      <View style={styles.mainColorsBox}>\n          <View style={styles.colorContainer1}>\n            <TouchableOpacity\n              title=\"random1\"\n              style={[\n                styles.colorButton,\n                {backgroundColor: random[0]},\n              ]}\n              onPress={() => alert( random[0] == mainColor ? `Correct! Lets spell it together... ${mainColor}` : 'try another color')}\n            >\n            </TouchableOpacity>\n            <TouchableOpacity\n              title=\"random2\"\n              style={[\n                styles.colorButton,\n                {backgroundColor: random[1] },\n              ]}\n              onPress={() => alert(random[1] == mainColor ? `Correct! Lets spell it together... ${mainColor}` : 'try another color')}\n            >\n            </TouchableOpacity>\n            <TouchableOpacity\n              title=\"random3\"\n              style={[\n                styles.colorButton,\n                {backgroundColor: random[2]},\n              ]}\n              onPress={() => alert(random[2] == mainColor ? `Correct! Lets spell it together... ${mainColor}` : 'try another color')}\n            >\n            </TouchableOpacity>\n          </View>\n          <View style={styles.colorContainer2}>\n            <TouchableOpacity\n              title=\"random4\"\n              style={[\n                styles.colorButton,\n                {backgroundColor: random[3] },\n              ]}\n              onPress={() => alert(random[3] == mainColor ? `Correct! Lets spell it together... ${mainColor}` : 'try another color')}\n            >\n            </TouchableOpacity>\n          <TouchableOpacity\n            title=\"random5\"\n            style={[\n              styles.colorButton,\n              {backgroundColor: random[4]},\n            ]}\n            onPress={() => alert(random[4] == mainColor ? `Correct! Lets spell it together... ${mainColor}` : 'try another color')}\n          >\n          </TouchableOpacity>\n          <TouchableOpacity\n            title=\"random6\"\n            style={[\n              styles.colorButton,\n              {backgroundColor: random[0] == mainColor ? random[5] : random[1] == mainColor ? random[5] : random[2] == mainColor ? random[5] : random[3] == mainColor ? random[5] : random[4] == mainColor ? random[5] : mainColor},\n            ]}\n            onPress={() => alert(random[0] == mainColor || random[1] == mainColor || random[2] == mainColor || random[3] == mainColor || random[4] == mainColor ? 'try another color' : random[6] || random[7] || random[8] || random[9] || random[10] || random[11] || random[12] || random[13] == mainColor ? `Correct! Lets spell it together... ${mainColor}` : 'Not me')}\n          >\n          </TouchableOpacity>\n          </View>\n        </View>\n        <View style={styles.navBar}>\n          <TouchableOpacity\n            title=\"backward\"\n          >\n            <Image source={backArrow} style={{width: 20}}></Image>\n          </TouchableOpacity>\n          <Text>Home</Text>\n          <Text>Forward</Text>\n        </View>\n      </View>\n  );\n}\n\nexport default Color"]},"metadata":{},"sourceType":"module"}