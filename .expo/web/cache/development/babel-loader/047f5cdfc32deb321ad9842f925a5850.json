{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bmaz_/dev/LeranWithMe/src/components/numbersPage.js\";\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport styles from \"../styles/numbersStyles\";\nvar disableYellowBox = true;\n\nvar backArrow = require(\"../images/backArrow.png\");\n\nvar forwardArrow = require(\"../images/forwardArrow.png\");\n\nvar homeButton = require(\"../images/homeButton.png\");\n\nvar Number = function Number(props) {\n  var _useState = useState(props.number),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var numberArray = number.number;\n  console.log(numberArray);\n  var numbers = numberArray;\n  return React.createElement(View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.numbersContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    title: \"upperCase\",\n    style: [styles.button1],\n    onPress: function onPress() {\n      numbers[0] <= 100 ? alert(\"Number... \" + numbers[0]) : alert(\"Good Job\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.numberBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, numbers[0] == 101 ? React.createElement(Emoji, {\n    name: \"smiley\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 63\n    }\n  }, \"Next\") : numbers[0])), React.createElement(TouchableOpacity, {\n    title: \"upperCase\",\n    style: [styles.button1],\n    onPress: function onPress() {\n      numbers[1] <= 100 ? alert(\"Number... \" + numbers[1]) : alert(\"Good Job\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.numberBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, numbers[1] == 101 ? React.createElement(Emoji, {\n    name: \"smiley\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 63\n    }\n  }, \"Next\") : numbers[1])), React.createElement(TouchableOpacity, {\n    title: \"upperCase\",\n    style: [styles.button1],\n    onPress: function onPress() {\n      numbers[2] <= 100 ? alert(\"Number... \" + numbers[2]) : alert(\"Good Job\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.numberBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, numbers[2] == 101 ? React.createElement(Emoji, {\n    name: \"smiley\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 63\n    }\n  }, \"Next\") : numbers[2]))), React.createElement(View, {\n    style: styles.navBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    title: \"backward\",\n    onPress: function onPress() {\n      return alert(\"go back a page\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: backArrow,\n    style: numbers[0] == 1 ? {\n      display: 'none'\n    } : styles.arrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    title: \"home\",\n    onPress: function onPress() {\n      return alert(\"go to home page\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    style: (styles.arrow, {}),\n    name: 'home-circle-outline',\n    size: 70,\n    color: 'white',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    title: \"forward\",\n    onPress: function onPress() {\n      return alert(\"next page\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: forwardArrow,\n    style: numbers[2] == 100 ? {\n      display: 'none'\n    } : styles.arrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Number;","map":{"version":3,"sources":["/Users/bmaz_/dev/LeranWithMe/src/components/numbersPage.js"],"names":["React","useState","Icon","styles","disableYellowBox","backArrow","require","forwardArrow","homeButton","Number","props","number","setNumber","numberArray","console","log","numbers","mainContainer","numbersContainer","button1","alert","numberBox","navBar","display","arrow"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons'\nimport styles from \"../styles/numbersStyles\";\n\nconst disableYellowBox = true;\nconst backArrow = require(\"../images/backArrow.png\")\nconst forwardArrow = require('../images/forwardArrow.png')\nconst homeButton = require(\"../images/homeButton.png\")\n\n\nconst Number = (props) => {\n  const [number, setNumber] = useState(props.number)\n  let numberArray = number.number;\n  console.log(numberArray)\n//   const newNumber = []\n//   for(let i = 0; i < 3; i++) {\n//       newNumber.push(numberArray[i].number)\n//   }\n//   console.log(newNumber)\n\n// const numbers = newNumber\nconst numbers = numberArray\n\n  return (\n    <View style={styles.mainContainer}>\n      <View style={styles.numbersContainer}>\n      <TouchableOpacity\n      title='upperCase' \n      style={[\n          styles.button1\n          ]} \n          onPress={() => {numbers[0] <= 100 ? alert(`Number... ${numbers[0]}`) : alert(`Good Job`)}}>\n          <Text style={styles.numberBox}>{numbers[0] == 101 ? <Emoji name=\"smiley\">Next</Emoji> : numbers[0]}</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n      title='upperCase' \n      style={[\n          styles.button1\n          ]} \n          onPress={() => {numbers[1] <= 100 ? alert(`Number... ${numbers[1]}`) : alert(`Good Job`)}}>\n          <Text style={styles.numberBox}>{numbers[1] == 101 ? <Emoji name=\"smiley\">Next</Emoji> : numbers[1]}</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n      title='upperCase' \n      style={[\n          styles.button1\n          ]} \n          onPress={() => {numbers[2] <= 100 ? alert(`Number... ${numbers[2]}`) : alert(`Good Job`)}}>\n          <Text style={styles.numberBox}>{numbers[2] == 101 ? <Emoji name=\"smiley\">Next</Emoji> : numbers[2]}</Text>\n      </TouchableOpacity>\n      </View>\n      <View style={styles.navBar}>\n          <TouchableOpacity\n            title=\"backward\"\n            onPress={() => alert(\"go back a page\")}\n          >\n            <Image source={backArrow} style={numbers[0] == 1 ? {display: 'none'} : styles.arrow}></Image>\n          </TouchableOpacity>\n          <TouchableOpacity\n            title=\"home\"\n            onPress={() => alert(\"go to home page\")}\n          >\n            {/* <Image source={homeButton} style={styles.arrow}></Image> */}\n            <Icon  \n              style={\n                styles.arrow, \n                {\n                  // shadowColor: 'black',\n                  // shadowOpacity: 1,\n                  // shadowRadius: 1,\n                  // shadowOffset: {\n                  //     width: 2,\n                  //     height: 1,     \n                  // },\n                }} \n              name={'home-circle-outline'} size={70} color={'white'}/>\n          </TouchableOpacity>\n          <TouchableOpacity\n            title=\"forward\"\n            onPress={() => alert(\"next page\")}\n          >\n            <Image source={forwardArrow} style={numbers[2] == 100 ? {display: 'none'} : styles.arrow}></Image>\n          </TouchableOpacity>\n        </View>\n    </View>\n    )\n}\nexport default Number"]},"metadata":{},"sourceType":"module"}