{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bmaz_/dev/LeranWithMe/src/components/numbersPage.js\";\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../styles/numbersStyles\";\nimport Emoji from 'react-native-emoji';\nvar disableYellowBox = true;\n\nvar Number = function Number(props) {\n  var _useState = useState(props.number),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var numberArray = number.number;\n  var newNumber = [];\n  var newNumber2 = [];\n\n  for (var i = 0; i < 3; i++) {\n    newNumber.push(numberArray[i]);\n  }\n\n  for (var _i = 3; _i < 6; _i++) {\n    newNumber2.push(numberArray[_i]);\n  }\n\n  console.log(newNumber);\n  console.log(newNumber2);\n  return React.createElement(View, {\n    style: styles.mainContainer1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    title: \"upperCase\",\n    style: [styles.button1],\n    onPress: function onPress() {\n      newNumber <= 100 ? alert(\"Number... \" + newNumber) : alert(\"Good Job\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.numberBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, newNumber == 101 ? React.createElement(Emoji, {\n    name: \"smiley\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 68\n    }\n  }, \"Next\") : newNumber), React.createElement(Text, {\n    style: styles.numberBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, newNumber == 101 ? React.createElement(Emoji, {\n    name: \"smiley\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 68\n    }\n  }, \"Next\") : newNumber), React.createElement(Text, {\n    style: styles.numberBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, newNumber == 101 ? React.createElement(Emoji, {\n    name: \"smiley\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 68\n    }\n  }, \"Next\") : newNumber)), React.createElement(TouchableOpacity, {\n    title: \"upperCase\",\n    style: [styles.button1],\n    onPress: function onPress() {\n      newNumber2 <= 100 ? alert(\"Number... \" + newNumber2) : alert(\"Good Job\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.numberBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, newNumber2 == 101 ? React.createElement(Emoji, {\n    name: \"smiley\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 69\n    }\n  }, \"Next\") : newNumber2)));\n};\n\nexport default Number;","map":{"version":3,"sources":["/Users/bmaz_/dev/LeranWithMe/src/components/numbersPage.js"],"names":["React","useState","styles","Emoji","disableYellowBox","Number","props","number","setNumber","numberArray","newNumber","newNumber2","i","push","console","log","mainContainer1","button1","alert","numberBox"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n} from \"react-native\";\nimport styles from \"../styles/numbersStyles\";\nimport Emoji from 'react-native-emoji';\n\nconst disableYellowBox = true;\n\n\n\nconst Number = (props) => {\n  const [number, setNumber] = useState(props.number)\n  let numberArray = number.number;\n  // console.log(numberArray)\n  const newNumber = []\n  const newNumber2 = []\n  for(let i = 0; i < 3; i++) {\n      newNumber.push(numberArray[i])\n  }\n  for(let i = 3; i < 6; i++) {\n      newNumber2.push(numberArray[i])\n  }\n  console.log(newNumber)\n  console.log(newNumber2)\n\n// const numbers = numberArray\n\n\n  return (\n    <View style={styles.mainContainer1}>\n\n            <TouchableOpacity\n            title='upperCase' \n            style={[\n                styles.button1\n                ]} \n                onPress={() => {newNumber <= 100 ? alert(`Number... ${newNumber}`) : alert(`Good Job`)}}>\n                <Text style={styles.numberBox}>{newNumber == 101 ? <Emoji name=\"smiley\">Next</Emoji> : newNumber}</Text>\n                <Text style={styles.numberBox}>{newNumber == 101 ? <Emoji name=\"smiley\">Next</Emoji> : newNumber}</Text>\n                <Text style={styles.numberBox}>{newNumber == 101 ? <Emoji name=\"smiley\">Next</Emoji> : newNumber}</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n            title='upperCase' \n            style={[\n                styles.button1\n                ]} \n                onPress={() => {newNumber2 <= 100 ? alert(`Number... ${newNumber2}`) : alert(`Good Job`)}}>\n                <Text style={styles.numberBox}>{newNumber2 == 101 ? <Emoji name=\"smiley\">Next</Emoji> : newNumber2}</Text>\n            </TouchableOpacity>\n    </View>\n    )\n}\nexport default Number\n//   return (\n//     <View style={styles.mainContainer1}>\n\n//             <TouchableOpacity\n//             title='upperCase' \n//             style={[\n//                 styles.button1\n//                 ]} \n//                 onPress={() => {numbers <= 100 ? alert(`Number... ${numbers}`) : alert(`Good Job`)}}>\n//                 <Text style={styles.numberBox}>{numbers == 101 ? <Emoji name=\"smiley\">Next</Emoji> : numbers}</Text>\n//             </TouchableOpacity>\n//             <TouchableOpacity\n//             title='upperCase' \n//             style={[\n//                 styles.button1\n//                 ]} \n//                 onPress={() => {numbers <= 100 ? alert(`Number... ${numbers}`) : alert(`Good Job`)}}>\n//                 <Text style={styles.numberBox}>{numbers == 101 ? <Emoji name=\"smiley\">Next</Emoji> : numbers}</Text>\n//             </TouchableOpacity>\n//     </View>\n//     )\n// }\n// export default Number"]},"metadata":{},"sourceType":"module"}