{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/bmaz_/dev/LeranWithMe/src/components/numbersPage.js\";\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../styles/numbersStyles\";\nimport Emoji from 'react-native-emoji';\nvar disableYellowBox = true;\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nvar box_count = 1;\nvar box_height = height / box_count;\n\nvar Number = function Number(props) {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.box, styles.box1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: [styles.box, styles.box2],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: [styles.box, styles.box3],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Number;","map":{"version":3,"sources":["/Users/bmaz_/dev/LeranWithMe/src/components/numbersPage.js"],"names":["React","useState","styles","Emoji","disableYellowBox","Dimensions","get","height","box_count","box_height","Number","props","container","box","box1","box2","box3"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAMA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,gBAAgB,GAAG,IAAzB;;AAEA,sBAAeC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;AAAA,IAAKC,MAAL,mBAAKA,MAAL;;AAEA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,UAAU,GAAGF,MAAM,GAAGC,SAA1B;;AAGA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACvB,SACK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACV,MAAM,CAACW,GAAR,EAAaX,MAAM,CAACY,IAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACZ,MAAM,CAACW,GAAR,EAAaX,MAAM,CAACa,IAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACb,MAAM,CAACW,GAAR,EAAaX,MAAM,CAACc,IAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADL;AAOA,CARH;;AAgCA,eAAeN,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n} from \"react-native\";\nimport styles from \"../styles/numbersStyles\";\nimport Emoji from 'react-native-emoji';\n\nconst disableYellowBox = true;\n\nlet {height} = Dimensions.get('window')\n\nlet box_count = 1\nlet box_height = height / box_count;\n\n\nconst Number = (props) => {\n   return (\n        <View style={styles.container}>\n            <View style={[styles.box, styles.box1]}></View>\n            <View style={[styles.box, styles.box2]}></View>\n            <View style={[styles.box, styles.box3]}></View>\n        </View>\n    );\n  }\n//   const [number, setNumber] = useState(props.number)\n//   let numberArray = number.number;\n//   console.log(numberArray)\n\n// const numbers = numberArray\n\n//   return (\n//     <View style={styles.mainContainer1}>\n//         <View style={styles.mainNumbersBox}>\n//         <View style={styles.numberContainer}>\n//             <TouchableOpacity\n//             title='upperCase' \n//             style={[\n//                 styles.button1\n//                 ]} \n//                 onPress={() => {numbers <= 100 ? alert(`Number... ${numbers}`) : alert(`Good Job`)}}>\n//                 <Text style={styles.numberBox}>{numbers == 101 ? <Emoji name=\"smiley\">Next</Emoji> : numbers}</Text>\n//             </TouchableOpacity>\n//             </View>\n//         </View>\n//     </View>\n//     )\n// }\nexport default Number"]},"metadata":{},"sourceType":"module"}